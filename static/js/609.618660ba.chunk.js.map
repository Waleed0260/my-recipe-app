{"version":3,"file":"static/js/609.618660ba.chunk.js","mappings":"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","sources":["ErrorBoundary.jsx","Pages/Pages.jsx","../../node_modules/react-error-boundary/node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","../../node_modules/react-error-boundary/node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","../../node_modules/react-error-boundary/src/index.tsx","../../node_modules/react-top-loading-bar/src/useInterval.ts","../../node_modules/react-top-loading-bar/src/utils.ts","../../node_modules/react-top-loading-bar/src/index.tsx"],"sourcesContent":["import {ErrorBoundary} from 'react-error-boundary'\r\nimport { themeContext } from './Context';\r\nimport { useContext } from 'react';\r\n\r\n\r\nfunction ErrorFallback({error, resetErrorBoundary}) {\r\n  const theme = useContext(themeContext);\r\n  const darkMode = theme.state.darkMode;\r\n  return (\r\n    <div role=\"alert\" style={darkMode ? {color: \"white\", marginTop: \"210px\", marginBottom: \"20px\"}: {color: \"black\", marginTop: \"210px\", marginBottom: \"20px\"}}>\r\n      <p>Something went wrong:</p>\r\n      <pre>{error.message} API limit exceeded please try after some time</pre>\r\n      <button onClick={resetErrorBoundary}>Try again</button>\r\n    </div>\r\n  )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ErrorFallback\r\n\r\n\r\n","import React, {Suspense, lazy, useState} from 'react'\r\nimport { ErrorBoundary } from 'react-error-boundary';\r\nimport {\r\n  Routes,\r\n  Route} from \"react-router-dom\";\r\n\r\nimport ErrorFallback from \"../ErrorBoundary\";\r\nimport LoadingBar from 'react-top-loading-bar';\r\n\r\nconst Home = lazy(() => import('./Home'));\r\nconst Searched = lazy(() => import('./Searched'));\r\nconst Cuisisne = lazy(() => import('./Cuisisne'));\r\nconst Recipe = lazy(() => import('./Recipe'));\r\nfunction Pages() {\r\n  const[progress, setProgress] = useState(0);\r\n\r\n  return (\r\n    <ErrorBoundary FallbackComponent={ErrorFallback}>\r\n    <Suspense>\r\n    <LoadingBar\r\n        height={3}\r\n        color='white'\r\n        progress={progress}\r\n      />\r\n      <Routes>\r\n        <Route path=\"/\" element={<Home setProgress={setProgress}/>}/>\r\n        <Route path=\"/my-recipe-app\" element={<Home setProgress={setProgress}/>}/>\r\n        <Route path=\"/cuisine/:type\" element={<Cuisisne setProgress={setProgress}/>}/>\r\n        <Route path=\"/searched/:search\" element={<Searched setProgress={setProgress}/>}/>\r\n        <Route path=\"/recipe/:name\" element={<Recipe setProgress={setProgress}/>}/>\r\n      </Routes>\r\n      </Suspense>\r\n      </ErrorBoundary>\r\n      )\r\n}\r\n\r\nexport default Pages\r\n","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import * as React from 'react'\n\nconst changedArray = (a: Array<unknown> = [], b: Array<unknown> = []) =>\n  a.length !== b.length || a.some((item, index) => !Object.is(item, b[index]))\n\ninterface FallbackProps {\n  error: Error\n  resetErrorBoundary: (...args: Array<unknown>) => void\n}\n\ninterface ErrorBoundaryPropsWithComponent {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback?: never\n  FallbackComponent: React.ComponentType<FallbackProps>\n  fallbackRender?: never\n}\n\ndeclare function FallbackRender(\n  props: FallbackProps,\n): React.ReactElement<\n  unknown,\n  string | React.FunctionComponent | typeof React.Component\n> | null\n\ninterface ErrorBoundaryPropsWithRender {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback?: never\n  FallbackComponent?: never\n  fallbackRender: typeof FallbackRender\n}\n\ninterface ErrorBoundaryPropsWithFallback {\n  onResetKeysChange?: (\n    prevResetKeys: Array<unknown> | undefined,\n    resetKeys: Array<unknown> | undefined,\n  ) => void\n  onReset?: (...args: Array<unknown>) => void\n  onError?: (error: Error, info: {componentStack: string}) => void\n  resetKeys?: Array<unknown>\n  fallback: React.ReactElement<\n    unknown,\n    string | React.FunctionComponent | typeof React.Component\n  > | null\n  FallbackComponent?: never\n  fallbackRender?: never\n}\n\ntype ErrorBoundaryProps =\n  | ErrorBoundaryPropsWithFallback\n  | ErrorBoundaryPropsWithComponent\n  | ErrorBoundaryPropsWithRender\n\ntype ErrorBoundaryState = {error: Error | null}\n\nconst initialState: ErrorBoundaryState = {error: null}\n\nclass ErrorBoundary extends React.Component<\n  React.PropsWithRef<React.PropsWithChildren<ErrorBoundaryProps>>,\n  ErrorBoundaryState\n> {\n  static getDerivedStateFromError(error: Error) {\n    return {error}\n  }\n\n  state = initialState\n  resetErrorBoundary = (...args: Array<unknown>) => {\n    this.props.onReset?.(...args)\n    this.reset()\n  }\n\n  reset() {\n    this.setState(initialState)\n  }\n\n  componentDidCatch(error: Error, info: React.ErrorInfo) {\n    this.props.onError?.(error, info)\n  }\n\n  componentDidUpdate(\n    prevProps: ErrorBoundaryProps,\n    prevState: ErrorBoundaryState,\n  ) {\n    const {error} = this.state\n    const {resetKeys} = this.props\n\n    // There's an edge case where if the thing that triggered the error\n    // happens to *also* be in the resetKeys array, we'd end up resetting\n    // the error boundary immediately. This would likely trigger a second\n    // error to be thrown.\n    // So we make sure that we don't check the resetKeys on the first call\n    // of cDU after the error is set\n\n    if (\n      error !== null &&\n      prevState.error !== null &&\n      changedArray(prevProps.resetKeys, resetKeys)\n    ) {\n      this.props.onResetKeysChange?.(prevProps.resetKeys, resetKeys)\n      this.reset()\n    }\n  }\n\n  render() {\n    const {error} = this.state\n\n    const {fallbackRender, FallbackComponent, fallback} = this.props\n\n    if (error !== null) {\n      const props = {\n        error,\n        resetErrorBoundary: this.resetErrorBoundary,\n      }\n      if (React.isValidElement(fallback)) {\n        return fallback\n      } else if (typeof fallbackRender === 'function') {\n        return fallbackRender(props)\n      } else if (FallbackComponent) {\n        return <FallbackComponent {...props} />\n      } else {\n        throw new Error(\n          'react-error-boundary requires either a fallback, fallbackRender, or FallbackComponent prop',\n        )\n      }\n    }\n\n    return this.props.children\n  }\n}\n\nfunction withErrorBoundary<P>(\n  Component: React.ComponentType<P>,\n  errorBoundaryProps: ErrorBoundaryProps,\n): React.ComponentType<P> {\n  const Wrapped: React.ComponentType<P> = props => {\n    return (\n      <ErrorBoundary {...errorBoundaryProps}>\n        <Component {...props} />\n      </ErrorBoundary>\n    )\n  }\n\n  // Format for display in DevTools\n  const name = Component.displayName || Component.name || 'Unknown'\n  Wrapped.displayName = `withErrorBoundary(${name})`\n\n  return Wrapped\n}\n\nfunction useErrorHandler(givenError?: unknown): (error: unknown) => void {\n  const [error, setError] = React.useState<unknown>(null)\n  if (givenError != null) throw givenError\n  if (error != null) throw error\n  return setError\n}\n\nexport {ErrorBoundary, withErrorBoundary, useErrorHandler}\nexport type {\n  FallbackProps,\n  ErrorBoundaryPropsWithComponent,\n  ErrorBoundaryPropsWithRender,\n  ErrorBoundaryPropsWithFallback,\n  ErrorBoundaryProps,\n}\n\n/*\neslint\n  @typescript-eslint/sort-type-union-intersection-members: \"off\",\n  @typescript-eslint/no-throw-literal: \"off\",\n  @typescript-eslint/prefer-nullish-coalescing: \"off\"\n*/\n","import { useEffect, useRef } from 'react'\n\n/** keep typescript happy */\nconst noop = () => {}\n\nexport function useInterval(\n  callback: () => void,\n  delay: number | null | false,\n  immediate?: boolean\n) {\n  const savedCallback = useRef(noop)\n\n  // Remember the latest callback.\n  useEffect(() => {\n    savedCallback.current = callback\n  })\n\n  // Execute callback if immediate is set.\n  useEffect(() => {\n    if (!immediate) return\n    if (delay === null || delay === false) return\n    savedCallback.current()\n  }, [immediate])\n\n  // Set up the interval.\n  useEffect(() => {\n    if (delay === null || delay === false) return undefined\n    const tick = () => savedCallback.current()\n    const id = setInterval(tick, delay)\n    return () => clearInterval(id)\n  }, [delay])\n}\n\nexport default useInterval\n","export function randomValue(min: number, max: number): number {\n  return (Math.random() * (max - min + 1) + min)\n}\n\nexport function randomInt(min: number, max: number): number {\n  return Math.floor(randomValue(min, max))\n}\n","import * as React from 'react'\nimport {\n  CSSProperties,\n  useEffect,\n  useState,\n  forwardRef,\n  useImperativeHandle,\n  useRef,\n} from 'react'\nimport { useInterval } from './useInterval'\nimport { randomInt, randomValue } from './utils'\n\nexport type IProps = {\n  progress?: number\n  color?: string\n  shadow?: boolean\n  background?: string\n  height?: number\n  onLoaderFinished?: () => void\n  className?: string\n  containerClassName?: string\n  loaderSpeed?: number\n  transitionTime?: number\n  waitingTime?: number\n  style?: CSSProperties\n  containerStyle?: CSSProperties\n  shadowStyle?: CSSProperties\n}\n\nexport type LoadingBarRef = {\n  continuousStart: (startingValue?: number, refreshRate?: number) => void\n  staticStart: (startingValue?: number) => void\n  complete: () => void;\n}\n\nconst LoadingBar = forwardRef<LoadingBarRef, IProps>(\n  (\n    {\n      progress,\n      height = 2,\n      className = '',\n      color = 'red',\n      background = 'transparent',\n      onLoaderFinished,\n      transitionTime = 300,\n      loaderSpeed = 500,\n      waitingTime = 1000,\n      shadow = true,\n      containerStyle = {},\n      style = {},\n      shadowStyle: shadowStyleProp = {},\n      containerClassName = ''\n    },\n    ref\n  ) => {\n    const isMounted = useRef(false);\n    const [localProgress, localProgressSet] = useState<number>(0)\n\n    const pressedContinuous = useRef<{\n      active: boolean\n      refreshRate: number\n    }>({ active: false, refreshRate: 1000 })\n\n    const [usingProps, setUsingProps] = useState(false)\n\n    const [pressedStaticStart, setStaticStartPressed] = useState<{\n      active: boolean\n      value: number\n    }>({ active: false, value: 20 })\n\n    const initialLoaderStyle: CSSProperties = {\n      height: '100%',\n      background: color,\n      transition: `all ${loaderSpeed}ms ease`,\n      width: '0%',\n    }\n\n    const loaderContainerStyle: CSSProperties = {\n      position: 'fixed',\n      top: 0,\n      left: 0,\n      height,\n      background,\n      zIndex: 99999999999,\n      width: 100 + '%',\n    }\n\n    const initialShadowStyles: CSSProperties = {\n      boxShadow: `0 0 10px ${color}, 0 0 10px ${color}`,\n      width: '5%',\n      opacity: 1,\n      position: 'absolute',\n      height: '100%',\n      transition: `all ${loaderSpeed}ms ease`,\n      transform: 'rotate(3deg) translate(0px, -4px)',\n      left: '-10rem',\n    }\n\n    const [loaderStyle, loaderStyleSet] = useState<CSSProperties>(\n      initialLoaderStyle\n    )\n    const [shadowStyle, shadowStyleSet] = useState<CSSProperties>(\n      initialShadowStyles\n    )\n\n    useEffect(() => {\n      isMounted.current = true;\n      return () => {\n        isMounted.current = false;\n      }\n    }, []);\n\n    useImperativeHandle(ref, () => ({\n      continuousStart(startingValue?: number, refreshRate: number = 1000) {\n        if (pressedStaticStart.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(10, 20)\n\n        pressedContinuous.current = ({\n          active: true,\n          refreshRate,\n        })\n\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      staticStart(startingValue?: number) {\n        if (pressedContinuous.current.active) return\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n\n        const val = startingValue || randomInt(30, 50)\n\n        setStaticStartPressed({\n          active: true,\n          value: val,\n        })\n        localProgressSet(val)\n        checkIfFull(val)\n      },\n      complete() {\n        if (usingProps) {\n          console.warn(\n            \"react-top-loading-bar: You can't use both controlling by props and ref methods to control the bar!\"\n          )\n          return\n        }\n        localProgressSet(100)\n        checkIfFull(100)\n      },\n    }))\n\n    useEffect(() => {\n      loaderStyleSet({\n        ...loaderStyle,\n        background: color,\n      })\n\n      shadowStyleSet({\n        ...shadowStyle,\n        boxShadow: `0 0 10px ${color}, 0 0 5px ${color}`,\n      })\n    }, [color])\n\n    useEffect(() => {\n      if (ref) {\n        if (ref && progress !== undefined) {\n          console.warn(\n            'react-top-loading-bar: You can\\'t use both controlling by props and ref methods to control the bar! Please use only props or only ref methods! Ref methods will override props if \"ref\" property is available.'\n          )\n          return\n        }\n        checkIfFull(localProgress)\n        setUsingProps(false)\n      } else {\n        if (progress) checkIfFull(progress)\n\n        setUsingProps(true)\n      }\n    }, [progress])\n\n    const checkIfFull = (_progress: number) => {\n      if (_progress >= 100) {\n        // now it should wait a little\n        loaderStyleSet({\n          ...loaderStyle,\n          width: '100%',\n        })\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 10 + '%',\n          })\n        }\n\n        setTimeout(() => {\n          if (!isMounted.current) {\n            return;\n          }\n          // now it can fade out\n          loaderStyleSet({\n            ...loaderStyle,\n            opacity: 0,\n            width: '100%',\n            transition: `all ${transitionTime}ms ease-out`,\n            color: color,\n          })\n\n          setTimeout(() => {\n            if (!isMounted.current) {\n              return;\n            }\n            // here we wait for it to fade\n            if (pressedContinuous.current.active) {\n              // if we have continuous loader just ending, we kill it and reset it\n\n              pressedContinuous.current = {\n                ...pressedContinuous.current,\n                active: false,\n              };\n\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (pressedStaticStart.active) {\n              setStaticStartPressed({\n                ...pressedStaticStart,\n                active: false,\n              })\n              localProgressSet(0)\n              checkIfFull(0)\n            }\n\n            if (onLoaderFinished) onLoaderFinished()\n            localProgressSet(0)\n            checkIfFull(0)\n          }, transitionTime)\n        }, waitingTime)\n      } else {\n        loaderStyleSet((_loaderStyle) => {\n          return {\n            ..._loaderStyle,\n            width: _progress + '%',\n            opacity: 1,\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          }\n        })\n\n        if (shadow) {\n          shadowStyleSet({\n            ...shadowStyle,\n            left: _progress - 5.5 + '%',\n            transition: _progress > 0 ? `all ${loaderSpeed}ms ease` : '',\n          })\n        }\n      }\n    }\n\n    useInterval(\n      () => {\n        const minValue = Math.min(10, (100 - localProgress) / 5);\n        const maxValue =  Math.min(20, (100 - localProgress) / 3)\n\n        const random = randomValue(minValue, maxValue);\n\n        if (localProgress + random < 95) {\n          localProgressSet(localProgress + random)\n          checkIfFull(localProgress + random)\n        }\n      },\n      pressedContinuous.current.active ? pressedContinuous.current.refreshRate : null\n    )\n\n    return (\n      <div className={containerClassName} style={{...loaderContainerStyle, ...containerStyle}}>\n        <div className={className} style={{...loaderStyle, ...style}}>\n          {shadow ? <div style={{...shadowStyle, ...shadowStyleProp}} /> : null}\n        </div>\n      </div>\n    )\n  }\n)\n\nexport default LoadingBar\n"],"names":["error","resetErrorBoundary","darkMode","useContext","themeContext","state","role","style","color","marginTop","marginBottom","message","onClick","Home","lazy","Searched","Cuisisne","Recipe","useState","progress","setProgress","ErrorBoundary","FallbackComponent","ErrorFallback","Suspense","height","path","element","_setPrototypeOf","o","p","Object","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","prototype","create","constructor","changedArray","a","b","length","some","item","index","is","initialState","args","_this","props","onReset","reset","getDerivedStateFromError","this","setState","componentDidCatch","info","onError","componentDidUpdate","prevProps","prevState","resetKeys","onResetKeysChange","render","fallbackRender","fallback","React","isValidElement","Error","children","Component","withErrorBoundary","errorBoundaryProps","Wrapped","name","displayName","useErrorHandler","givenError","setError","noop","randomValue","min","max","Math","random","randomInt","floor","LoadingBar","forwardRef","ref","h","className","m","g","background","onLoaderFinished","transitionTime","k","loaderSpeed","N","waitingTime","T","shadow","containerStyle","j","z","shadowStyle","shadowStyleProp","F","containerClassName","isMounted","useRef","A","localProgress","localProgressSet","pressedContinuous","active","refreshRate","G","usingProps","setUsingProps","value","pressedStaticStart","setStaticStartPressed","loaderContainerStyle","position","top","left","zIndex","width","initialShadowStyles","boxShadow","opacity","transition","transform","X","loaderStyle","loaderStyleSet","shadowStyleSet","useEffect","current","useImperativeHandle","continuousStart","startingValue","console","warn","val","checkIfFull","staticStart","complete","callback","delay","savedCallback","_progress","setTimeout","_loaderStyle","id","setInterval","clearInterval"],"sourceRoot":""}